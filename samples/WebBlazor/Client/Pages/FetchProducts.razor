@page "/fetch-products"
@using Blazor.Shared
@using CoolStore.AppContracts.Dtos
@inject HttpClient _http

<h1>Product List</h1>

@if (_products == null)
{
    <p><em>Loading...</em></p>
    <p>@_error</p>
}
else
{
  <table class="table">
    <thead>
    <tr>
      <th>Id.</th>
      <th>Name</th>
      <th>Cost</th>
      <th>Quantity</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var product in _products)
    {
      <tr>
        <td>@product.Id</td>
        <td>@product.Name</td>
        <td>@product.Cost</td>
        <td>@product.Quantity</td>
      </tr>
    }
    </tbody>
  </table>
}

@code {
  private List<ProductDto> _products;
  private string _error;

  protected override async Task OnInitializedAsync()
  {
    var request = new HttpRequestMessage(HttpMethod.Get, "api/product-api/v1/products");
    request.Headers.Add("x-query", "{}");
    var response = await _http.SendAsync(request);
    if (response.IsSuccessStatusCode)
    {
      var resultModel = await response.Content.ReadFromJsonAsync<ResultModel<ListResponseModel<ProductDto>>>();
      if (resultModel is not null && !resultModel.IsError && resultModel.Data.Items.Any())
      {
        _products = resultModel.Data.Items;
      }
      else
      {
        _error = $"Error contacting API: {resultModel?.ErrorMessage}";
      }
    }
    else
    {
      _error = $"Error contacting API: {response.StatusCode}";
    }
  }

}
